{"ast":null,"code":"var _jsxFileName = \"/Users/obamayannkevin/Documents/GitHub/Time-chat-application/my_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io();\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [displayName, setDisplayName] = useState(null);\n  const [displayNameInput, setDisplayNameInput] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setReceivedMessages(prevState => [...prevState, message]);\n    });\n  }, []);\n\n  const sendMessage = () => {\n    socket.emit(\"message\", `${displayName}: ${message}`);\n    setMessage(\"\");\n  };\n\n  const onUpdateMessage = event => {\n    setMessage(event.target.value);\n  };\n\n  const onUpdateDisplayNameInput = event => {\n    setDisplayNameInput(event.target.value);\n  };\n\n  const updateDisplayName = () => {\n    setDisplayName(displayNameInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: receivedMessages.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: onUpdateMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"display-name\",\n        children: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: displayNameInput,\n        onChange: onUpdateDisplayNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateDisplayName,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"9FNznH5BEQ6Y6iRoXITp9g71NvA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/obamayannkevin/Documents/GitHub/Time-chat-application/my_app/src/App.js"],"names":["React","useState","useEffect","io","socket","App","message","setMessage","receivedMessages","setReceivedMessages","displayName","setDisplayName","displayNameInput","setDisplayNameInput","on","prevState","sendMessage","emit","onUpdateMessage","event","target","value","onUpdateDisplayNameInput","updateDisplayName","map","item","index"],"mappings":";;;AACE,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAqBR,OAAO,IAAI;AAC9BG,MAAAA,mBAAmB,CAACM,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeT,OAAf,CAAd,CAAnB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMU,WAAW,GAAG,MAAM;AACxBZ,IAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAwB,GAAEP,WAAY,KAAIJ,OAAQ,EAAlD;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,QAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/BZ,IAAAA,UAAU,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,wBAAwB,GAAGH,KAAK,IAAI;AACxCN,IAAAA,mBAAmB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC9BZ,IAAAA,cAAc,CAACC,gBAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGF,WAAW,gBACV;AAAA,8BACE;AAAA,kBACGF,gBAAgB,CAACgB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACpB;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEpB,OAA1B;AAAmC,QAAA,QAAQ,EAAEY;AAA7C;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADU,gBAWV;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEJ,gBAFT;AAGE,QAAA,QAAQ,EAAEU;AAHZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAQ,QAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAvDQlB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["\n  import React, { useState, useEffect } from \"react\";\n  import \"./App.css\";\n  import io from \"socket.io-client\";\n\n  const socket = io();\n\n  function App() {\n    const [message, setMessage] = useState(\"\");\n    const [receivedMessages, setReceivedMessages] = useState([]);\n    const [displayName, setDisplayName] = useState(null);\n    const [displayNameInput, setDisplayNameInput] = useState(\"\");\n\n    useEffect(() => {\n      socket.on(\"message\", message => {\n        setReceivedMessages(prevState => [...prevState, message]);\n      });\n    }, []);\n\n    const sendMessage = () => {\n      socket.emit(\"message\", `${displayName}: ${message}`);\n      setMessage(\"\");\n    };\n\n    const onUpdateMessage = event => {\n      setMessage(event.target.value);\n    };\n\n    const onUpdateDisplayNameInput = event => {\n      setDisplayNameInput(event.target.value);\n    };\n\n    const updateDisplayName = () => {\n      setDisplayName(displayNameInput);\n    };\n\n    return (\n      <div className=\"container\">\n        {displayName ? (\n          <>\n            <ul>\n              {receivedMessages.map((item, index) => (\n                <li key={index}>{item}</li>\n              ))}\n            </ul>\n            <input type=\"text\" value={message} onChange={onUpdateMessage} />\n            <button onClick={sendMessage}>SEND</button>\n          </>\n        ) : (\n          <>\n            <label for=\"display-name\">Display Name</label>\n            <br />\n            <input\n              type=\"text\"\n              value={displayNameInput}\n              onChange={onUpdateDisplayNameInput}\n            />\n            <button onClick={updateDisplayName}>SUBMIT</button>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  export default App;"]},"metadata":{},"sourceType":"module"}